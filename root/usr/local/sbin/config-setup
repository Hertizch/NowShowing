#!/usr/bin/with-contenv ruby
require 'rubygems'
require 'json'
require 'httparty'
require 'highline/import'

require_relative '/var/lib/nowshowing/plexTv'

# Class to setup Report
#
# Author: Brian Stascavage
# Email: brian@stascavage.com
# Modified by: ninthwalker@gmail.com & groxypod@gmail.com
#
class Setup
    include HTTParty

    def initialize
        begin
            $config = Hash.new
        rescue Errno::ENOENT => e
            abort('Configuration file not found.  Exiting...')
        end

        $config = { 'plex'  =>
                        { 'server'   => '',
                          'api_key'  => '' },
                    'mail'  =>
                        { 'address'  => '',
                          'port'     => '',
                          'username' => '',
                          'password' => ''}
                  }
        $plex = PlexTv.new($config)
    end

    def setPlexApiKey
		plexusername = ENV['PLEX_USERNAME'] 
		plexpassword = ENV['PLEX_PASSWORD'] || []

		if plexpassword.empty?
			$config['plex']['api_key'] = ENV['PLEX_TOKEN']
		else
			auth = {:username => plexusername, :password => plexpassword}
			devices = $plex.get("/devices.xml", auth, true)

			devices['MediaContainer']['Device'].each do | device, index |
				if device['provides'] == 'server'
					$config['plex']['api_key'] = device['token']
					return true
				end 

				if devices['MediaContainer']['Device'].size - 1 == index
					puts "Cannot find Plex Server.  Exiting"
					abort
				end
			end
		end
	end

    def setServer
        $config['plex']['server'] = ENV['PLEX_SERVER_IP']
        if $config['plex']['server'].empty?
			$config['plex']['server'] = 'localhost'
        end
    end

    def setEmail
        $config['mail']['address'] = ENV['SMTP_SERVER']
        if $config['mail']['address'].empty?
            $config['mail']['address'] = 'smtp.gmail.com'
        end

        $config['mail']['port'] = ENV['SMTP_PORT']
        if $config['mail']['port'].empty?
            $config['mail']['port'] = 587
        end

        $config['mail']['username'] = ENV['EMAIL_USERNAME']
        $config['mail']['password'] = ENV['EMAIL_PASSWORD']

    end

    def start
        self.setServer
        self.setPlexApiKey
        self.setEmail

        File.open('/opt/config.yaml', 'w') {|f| f.write $config.to_yaml }
    end
end

setup_agent = Setup.new
setup_agent.start
con
